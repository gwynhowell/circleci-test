version: 2.0
jobs:
  build:
    working_directory: ~/ahr
    docker:
      - image: circleci/python:2.7
      #- image: circleci/ruby:2.4.2-jessie-node
      # - image: alpine:3.7
      # - image: google/cloud-sdk
    steps:
      - checkout
      # - run:
      #     name: Install Ruby
      #     command: |
      #       # sudo apt-get install ruby-dev
      #       sudo apt-get install ruby-sass
      - run:
          name: Install Pips
          command: |
            pip install --upgrade pip
            # sudo pip install python-coveralls pycrypto MySQL-python nose --user
            sudo pip install python-coveralls pycrypto MySQL-python nose
      # - run:
      #     name: Install Gems
      #     command: |
      #       # gem update --system
      #       sudo gem install sass compass
      - run:
          name: Install gcloud
          command: |
            CLOUD_SDK_URL=https://dl.google.com/dl/cloudsdk/channels/rapid/downloads/google-cloud-sdk-210.0.0-linux-x86_64.tar.gz
            curl $CLOUD_SDK_URL | tar -xz -C ~/
            sh ~/google-cloud-sdk/install.sh --quiet --path-update true
            ~/google-cloud-sdk/bin/gcloud --quiet components install app-engine-python

            GAE_PATH=~/google-cloud-sdk/platform/google_appengine
            echo export PYTHONPATH=${PYTHONPATH}:$GAE_PATH:$GAE_PATH/lib/webapp2-2.5.2:$GAE_PATH/lib/webob-1.2.3:$GAE_PATH/lib/yaml-3.10/lib:$GAE_PATH/lib/jinja2-2.6:${HOME}/ahr/src/lib >> ~/.bashrc
            source ~/.bashrc
            #PYTHONPATH=${PYTHONPATH}:$GAE_PATH:$GAE_PATH/lib/webapp2-2.5.2:$GAE_PATH/lib/webob-1.2.3:$GAE_PATH/lib/yaml/lib:$GAE_PATH/lib/jinja2-2.6:${HOME}/ahr/src/lib
      - run:
          name: Run tests
          command: |
            source ~/.bashrc
            mkdir ~/artifacts
            nosetests tests --with-xunit --xunit-file ~/artifacts/nosetests.xml
          # - nosetests tests src/appogee/tests -v --with-coverage --with-xunit --xunit-file $CIRCLE_TEST_REPORTS/nosetests.xml
      - store_test_results:
          path: ~/artifacts
      - store_artifacts:
          path: ~/artifacts

  print:
    docker:
      - image: circleci/python:2.7
    steps:
      - run:
          name: The First Step
          command: |
            echo 'Hello World!'
            echo 'This is the delivery pipeline'
      - run:
          name: Code Has Arrived
          command: |
            ls -al
            echo '^^^That should look familiar^^^'

workflows:
  version: 2
  build-test-and-deploy:
    jobs:
      - build
      - print:
          requires:
            - build
